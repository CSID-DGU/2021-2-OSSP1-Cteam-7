There is a corridor in a Jail which is N units long. Given an array A of size N. The ith index of this array is 0 if the light at ith position is faulty otherwise it is 1. All the lights are of specific power B which if is placed at position X, it can light the corridor from [ X-B+1, X+B-1 ]. Initially all lights are off. Return the minimum number of lights to be turned ON to light the whole corridor or -1 if the whole corridor cannot be lighted.splitsign('lights', 0.4964),('light', 0.4611),('lighted', 0.4318),('array', 0.4231),('corridor', 0.3363),
Given a non-negative number represented as an array of digits, add 1 to the number ( increment the number represented by the digits ). The digits are stored such that the most significant digit is at the head of the list.splitsign('digits', 0.5673),('digit', 0.5292),('number', 0.4723),('increment', 0.4631),('array', 0.3352),
Given a character matrix of size N x M in the form of a string array A of size N where A[i] denotes ith row. Each character in the matrix consists any one of the following three characters {'r', 'g', 'b'} where 'r' denotes red color similarly 'g' denotes green color and 'b' denotes blue color. You have to find the area of the largest triangle that has one side parallel to y-axis i.e vertical and the color of all three vertices are different.splitsign('matrix', 0.4095),('triangle', 0.3491),('string', 0.3357),('vertices', 0.3318),('array', 0.2957),
You are given a binary string A consisting of characters A1, A2, ..., AN. In a single operation, you can choose two indices L and R such that 1 ≤ L ≤ R ≤ N and flip the characters AL, AL+1, ..., AR. By flipping, we mean change character 0 to 1 and vice-versa. Your aim is to perform ATMOST one operation such that in final string number of 1s is maximised. If you don't want to perform the operation, return an empty array. Else, return an array consisting of two elements denoting L and R. If there are multiple solutions, return the lexicographically smallest pair of L and R.splitsign('binary', 0.5351),('string', 0.3762),('flip', 0.3644),('flipping', 0.3497),('array', 0.3389),
Given an integer array A of size N. You need to check that whether there exist a element which is strictly greater than all the elements on left of it and strictly smaller than all the elements on right of it. If it exists return 1 else return 0.splitsign('array', 0.4463),('integer', 0.3992),('elements', 0.2411),('element', 0.2344),('check', 0.2174),
Given an integer array A of size N. You need to count the number of special elements in the given array. A element is special if removal of that element make the array balanced. Array will be balanced if sum of even index element equal to sum of odd index element.splitsign('balanced', 0.4317),('array', 0.3646),('integer', 0.3228),('elements', 0.2925),('element', 0.2501),
A hotel manager has to process N advance bookings of rooms for the next season. His hotel has C rooms. Bookings contain an arrival date and a departure date. He wants to find out whether there are enough rooms in the hotel to satisfy the demand. Write a program that solves this problem in time O(N log N) .splitsign('bookings', 0.5385),('hotel', 0.5216),('rooms', 0.4683),('program', 0.3151),('problem', 0.3026),
You're given a read only array of n integers. Find out if any integer occurs more than n/3 times in the array in linear time and constant additional space. If so, return the integer. If not, return -1. If there are multiple solutions, return any one.splitsign('array', 0.4542),('integer', 0.4391),('integers', 0.4369),('linear', 0.3408),('solutions', 0.3108),
The set [1,2,3,…,n] contains a total of n! unique permutations.By listing and labeling all of the permutations in order,We get the following sequence (ie, for n = 3 ) :splitsign('permutations', 0.6076),('sequence', 0.331),('order', 0.1923),('set', 0.1872),('unique', 0.186),
The gray code is a binary numeral system where two successive values differ in only one bit.Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.splitsign('binary', 0.5417),('gray', 0.4939),('code', 0.4706),('numeral', 0.3489),('bits', 0.3172),
Given an integer n, return all distinct solutions to the n-queens puzzle.Each solution contains a distinct board configuration of the n-queens’ placement, where 'Q' and '.' both indicate a queen and an empty space respectively.splitsign('queens', 0.4941),('queen', 0.4923),('board', 0.4185),('solutions', 0.3984),('solution', 0.3403),
There is given an integer array A of size N denoting the heights of N trees. Lumberjack Ojas needs to chop down B metres of wood. It is an easy job for him since he has a nifty new woodcutting machine that can take down forests like wildfire. However, Ojas is only allowed to cut a single row of trees. Ojas's machine works as follows: Ojas sets a height parameter H (in metres), and the machine raises a giant sawblade to that height and cuts off all tree parts higher than H (of course, trees not higher than H meters remain intact). Ojas then takes the parts that were cut off. For example, if the tree row contains trees with heights of 20, 15, 10, and 17 metres, and Ojas raises his sawblade to 15 metres, the remaining tree heights after cutting will be 15, 15, 10, and 15 metres, respectively, while Ojas will take 5 metres off the first tree and 2 metres off the fourth tree (7 metres of wood in total). Ojas is ecologically minded, so he doesn't want to cut off more wood than necessary. That's why he wants to set his sawblade as high as possible. Help Ojas find the maximum integer height of the sawblade that still allows him to cut off at least B metres of wood.splitsign('ojas', 0.4663),('cutting', 0.4267),('lumberjack', 0.418),('woodcutting', 0.4164),('trees', 0.3739),
Given a sorted array of integers A(0 based index) of size N, find the starting and ending position of a given integar B in array A. Your algorithm’s runtime complexity must be in the order of O(log n). Return an array of size 2, such that first element = starting position of B in A and second element = ending position of B in A, if B is not found in A return [-1, -1].splitsign('algorithm', 0.526),('array', 0.3373),('complexity', 0.2949),('index', 0.2877),('sorted', 0.2877),
Given a matrix of integers A of size N x M and an integer B. Write an efficient algorithm that searches for integar B in matrix A. This matrix A has the following properties: 1. Integers in each row are sorted from left to right. 2. The first integer of each row is greater than or equal to the last integer of the previous row. Return 1 if B is present in A, else return 0.splitsign('algorithm', 0.4962),('matrix', 0.461),('integers', 0.3141),('integer', 0.3125),('integar', 0.2921),
Given an array of integers A of size N and an integer B. College library has N bags,the ith book has A[i] number of pages. You have to allocate books to B number of students so that maximum number of pages alloted to a student is minimum. A book will be allocated to exactly one student. Each student has to be allocated at least one book. Allotment should be in contiguous order for example: A student cannot be allocated book 1 and book 3, skipping book 2. Calculate and return that minimum possible number.splitsign('students', 0.3932),('allocated', 0.382),('books', 0.3631),('allocate', 0.3574),('bags', 0.3556),
Given an array of integers A of size N and an integer B. array A is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2 ). You are given a target value B to search. If found in the array, return its index, otherwise return -1. You may assume no duplicate exists in the array.splitsign('array', 0.4346),('index', 0.3564),('integers', 0.3354),('integer', 0.3326),('rotated', 0.3031),
There are many people who believe that the earth is flat and NASA is a scam. They call themselves Flat Earthers. They were already worried that the 6 feet social distancing rule might push some people out of the earth. Now, they decided to think about a new issue. Since the earth is flat ( or so they think), let's imagine it as an infinite 2D grid. They have the coordinates of certain points which are orange zones and have some COVID-19 cases reported. Now each day the orange zones become more fatal. After d days, all the locations within a euclidean distance of d of a particular orange zone can be affected by this zone. They know N orange zones, each of whose coordinates are given by (A[i][0], A[i][1]). Now, a location is considered a red zone if it is affected by at least B orange zones. You need to find the first day at which the first red zone is reported.splitsign('zones', 0.4292),('earth', 0.3919),('zone', 0.3872),('distancing', 0.3545),('earthers', 0.3401),
Given a string A, find the common palindromic sequence ( A sequence which does not need to be contiguous and is a pallindrome), which is common in itself.splitsign('palindromic', 0.5813),('sequence', 0.3912),('contiguous', 0.388),('common', 0.3655),('string', 0.3621),
Given a string A, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.splitsign('substrings', 0.4958),('tree', 0.4891),('string', 0.4787),('recursively', 0.446),('binary', 0.4188),
For example, if we choose the node “gr” and swap its two children, it produces a scrambled string “rgeat”.splitsign('rgeat', 0.4085),('scrambled', 0.3962),('node', 0.3629),('swap', 0.3587),('string', 0.3516),
Similarly, if we continue to swap the children of nodes “eat” and “at”, it produces a scrambled string “rgtae”.splitsign('nodes', 0.4758),('scrambled', 0.4577),('swap', 0.3944),('rgtae', 0.3854),('string', 0.3473),
Given a binary grid A of size N x M consisting of 0's and 1's, find the area of the largest rectangle inside the grid such that all the cells inside the chosen rectangle should have 1 in them.splitsign('rectangle', 0.445),('grid', 0.4085),('area', 0.3083),('largest', 0.2988),('cells', 0.2819),
You are allowed to permutate the columns matrix i.e. you can arrange each of the column in any order in the final grid.splitsign('columns', 0.5078),('arrange', 0.4497),('grid', 0.4444),('permutate', 0.439),('column', 0.4137),
There are a row of N houses, each house can be painted with one of the three colors: red, blue or green.splitsign('colors', 0.4904),('houses', 0.4568),('painted', 0.415),('blue', 0.4026),('house', 0.4021),
The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.splitsign('painting', 0.419),('paint', 0.3909),('houses', 0.3335),('house', 0.2535),('cost', 0.2474),
For example, A[0][0] is the cost of painting house 0 with color red; A[1][2] is the cost of painting house 1 with color green, and so on.splitsign('painting', 0.3215),('color', 0.3144),('red', 0.3108),('green', 0.2957),('cost', 0.2542),
In other words, find a subsequence of array in which the subsequence’s elements are in strictly increasing order, and in which the subsequence is as long as possible. splitsign('subsequence', 0.6736),('array', 0.3701),('increasing', 0.3155),('order', 0.2308),('strictly', 0.1969),
If Tushar’s resistance is denoted by A (>=0) then find the lexicographically smallest order of friends to kick Tushar so that the cumulative kick strength (sum of the strengths of friends who kicks) doesn’t exceed his resistance capacity and total no. of kicks hit are maximum.splitsign('tushar', 0.4889),('kick', 0.464),('kicks', 0.4435),('resistance', 0.4123),('strength', 0.3313),
Also note that each friend can kick unlimited number of times (If a friend hits x times, his strength will be counted x times)splitsign('strength', 0.4258),('kick', 0.3597),('unlimited', 0.3254),('times', 0.2712),('hits', 0.2575),
Return the lexicographically smallest array of maximum length where the ith index represents the index of the friend who will hit.splitsign('array', 0.4202),('smallest', 0.3934),('index', 0.3123),('maximum', 0.3017),('length', 0.2918),
Given an array of non-negative integers, A, of length N, you are initially positioned at the first index of the array.splitsign('array', 0.4717),('index', 0.3816),('positioned', 0.3722),('integers', 0.3649),('length', 0.2603),
Find out the number of N digit numbers, whose digits on being added equals to a given number S. Note that a valid number starts from digits 1-9 except the number 0 itself. i.e. leading zeroes are not allowed.splitsign('digits', 0.6002),('digit', 0.5653),('numbers', 0.4855),('number', 0.4339),('zeroes', 0.3614),
Given a 3 x A board, find the number of ways to color it using at most 4 colors such that no 2 adjacent boxes have same color.splitsign('colors', 0.4005),('board', 0.3792),('boxes', 0.3637),('color', 0.3135),('adjacent', 0.2821),
Two players take turns to take a coin from one of the ends of the line until there are no more coins left.splitsign('coin', 0.564),('coins', 0.5206),('turns', 0.3706),('ends', 0.3521),('line', 0.3266),
You know that there exists a floor C with 0 <= C <= B such that any egg dropped at a floor higher than C will break, and any egg dropped at or below floor C will not break.splitsign('egg', 0.4985),('floor', 0.3702),('break', 0.3423),('dropped', 0.2301),('higher', 0.2067),
Each move, you may take an egg (if you have an unbroken one) and drop it from any floor X (with 1 <= X <= B). splitsign('floor', 0.4301),('egg', 0.3626),('drop', 0.3305),('unbroken', 0.1203),
What is the minimum number of moves that you need to know with certainty what C is, regardless of the initial value of Csplitsign('moves', 0.4837),('minimum', 0.3371),('initial', 0.2733),('certainty', 0.265),('value', 0.194),
You are given Q queries, in each query you are given two integers u and v and you are required to find the maximum weighted edge in a simple path from u to v.splitsign('weighted', 0.4221),('queries', 0.3382),('query', 0.3239),('edge', 0.3206),('maximum', 0.3151),
Two kingdoms are on a war right now, kingdom X and kingdom Y. As a war specialist of kingdom X, you scouted kingdom Y area.splitsign('kingdoms', 0.6427),('kingdom', 0.6313),('war', 0.4151),('scouted', 0.3548),('area', 0.316),
The strength can also be negative, representing those warriors of your kingdom who were held hostages.splitsign('strength', 0.4388),('hostages', 0.3704),('kingdom', 0.3687),('negative', 0.2666),('warriors', 0.2369),
The strength of any village on row larger than one (2<=r<=N) is stronger or equal to the strength of village which is exactly above it.splitsign('village', 0.4008),('stronger', 0.3872),('strength', 0.3666),('row', 0.3242),('larger', 0.233),
The strength of any village on column larger than one (2<=c<=M) is stronger or equal to the strength of vilage which is exactly to its left.splitsign('village', 0.4255),('column', 0.3789),('strength', 0.3715),('stronger', 0.3654),('vilage', 0.2668),
So your task is, find the largest sum of strength that you can erase by bombing one sub-matrix in the grid.splitsign('matrix', 0.4924),('grid', 0.427),('largest', 0.2743),('bombing', 0.2699),('strength', 0.2672),
You need to divide the array A into two subsets S1 and S2 such that the absolute difference between their sums is minimum.splitsign('sums', 0.3589),('array', 0.3223),('minimum', 0.2926),('subsets', 0.2903),('s1', 0.2287),
The demons had captured the princess (P) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (K) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess.splitsign('knight', 0.4619),('dungeon', 0.4542),('princess', 0.4531),('valiant', 0.3497),('imprisoned', 0.3467),
The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately.splitsign('knight', 0.4658),('dies', 0.314),('health', 0.266),('integer', 0.2158),('initial', 0.2008),
Some of the rooms are guarded by demons, so the knight loses health (negative integers) upon entering these rooms; other rooms are either empty (0’s) or contain magic orbs that increase the knight’s health (positive integers).splitsign('rooms', 0.4392),('knight', 0.4119),('health', 0.2762),('demons', 0.2714),('integers', 0.2624),
In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step.splitsign('princess', 0.4523),('knight', 0.4309),('reach', 0.3002),('downward', 0.2814),('rightward', 0.2701),
Write a function to determine the knight’s minimum initial health so that he is able to rescue the princess.splitsign('knight', 0.4606),('princess', 0.422),('function', 0.3103),('health', 0.29),('initial', 0.2729),
For example, given the dungeon below, the initial health of the knight must be at least 7 if he follows the optimal pathsplitsign('knight', 0.3817),('dungeon', 0.3373),('path', 0.3318),('optimal', 0.3265),('health', 0.209),
There is a rod of length N lying on x-axis with its left end at x = 0 and right end at x = N. Now, there are M weak points on this rod denoted by positive integer values(all less than N) A1, A2, …, AM. You have to cut rod at all these weak points. You can perform these cuts in any order. After a cut, rod gets divided into two smaller sub-rods. Cost of making a cut is the length of the sub-rod in which you are making a cut.splitsign('cut', 0.4417),('cuts', 0.4409),('rods', 0.4405),('rod', 0.3589),('cost', 0.2825),
Your aim is to minimise this cost. Return an array denoting the sequence in which you will make cuts. If two different sequences of cuts give same cost, return the lexicographically smallest.splitsign('cuts', 0.4626),('minimise', 0.4605),('sequences', 0.4036),('sequence', 0.3939),('smallest', 0.3932),
If you were only permitted to complete at most one transaction (i.e, buy one and sell one share of the stock), design an algorithm to find the maximum profit.splitsign('profit', 0.4826),('stock', 0.3702),('maximum', 0.3698),('algorithm', 0.2824),('sell', 0.2741),
You are given a sequence of black and white horses, and a set of K stables numbered 1 to K. You have to accommodate the horses into the stables in such a way that the following conditions are satisfied:splitsign('stables', 0.6198),('horses', 0.5163),('white', 0.2463),('conditions', 0.2449),('set', 0.2319),
You fill the horses into the stables preserving the relative order of horses. For instance, you cannot put horse 1 into stable 2 and horse 2 into stable 1. You have to preserve the ordering of the horses.splitsign('stables', 0.6098),('horses', 0.5061),('horse', 0.461),('ordering', 0.3147),('preserving', 0.3052),
Take the product (number of white horses * number of black horses) for each stable and take the sum of all these products. This value should be the minimum among all possible accommodation arrangementssplitsign('arrangements', 0.455),('horses', 0.4229),('minimum', 0.4058),('accommodation', 0.3864),('value', 0.2553),
Given an integer array A of size N. You have to merge all the elements of the array into one with the minimum possible cost.splitsign('array', 0.3779),('integer', 0.3133),('minimum', 0.3009),('cost', 0.2584),('merge', 0.218),
·  Choose any two adjacent elements of the array with values say X and Y and merge them into a single element with value (X + Y) paying a total cost of (X + Y).splitsign('array', 0.4384),('adjacent', 0.2946),('paying', 0.2918),('cost', 0.275),('total', 0.2605),
As it is Tushar’s Birthday on March 1st, he decided to throw a party to all his friends at TGI Fridays in Pune.splitsign('tushar', 0.5426),('party', 0.4162),('birthday', 0.3802),('tgi', 0.3758),('fridays', 0.3249),
Given are the eating capacity of each friend, filling capacity of each dish and cost of each dish. A friend is satisfied if the sum of the filling capacity of dishes he ate is equal to his capacity. Find the minimum cost such that all of Tushar’s friends are satisfied (reached their eating capacity).splitsign('minimum', 0.4261),('capacity', 0.3856),('tushar', 0.3602),('dishes', 0.3432),('sum', 0.3401),
Given two integer arrays A and B of size N each which represent values and weights associated with N items respectively.splitsign('arrays', 0.5083),('weights', 0.3992),('values', 0.2354),('items', 0.2279),('integer', 0.223),
Find out the maximum value subset of A such that sum of the weights of this subset is smaller than or equal to C.splitsign('subset', 0.4086),('weights', 0.3924),('maximum', 0.3475),('sum', 0.299),('value', 0.1896),
You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).splitsign('transactions', 0.428),('stock', 0.4213),('multiple', 0.351),('sell', 0.2968),('buy', 0.2851),
However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).splitsign('transactions', 0.4038),('stock', 0.3853),('multiple', 0.2791),('sell', 0.2542),('buy', 0.2494),
Given an directed graph having A nodes labelled from 1 to A containing M edges given by matrix B of size M x 2such that there is a edge directed from nodesplitsign('matrix', 0.4118),('nodes', 0.3984),('edges', 0.3593),('graph', 0.3561),('directed', 0.2944),
Given an N x M matrix A of non-negative integers representing the height of each unit cell in a continent, the "Blue lake" touches the left and top edges of the matrix and the "Red lake" touches the right and bottom edges.splitsign('matrix', 0.3843),('lake', 0.3638),('continent', 0.3185),('edges', 0.2886),('cell', 0.2749),
Water can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.splitsign('flow', 0.3786),('cell', 0.3747),('water', 0.2347),('directions', 0.1716),('lower', 0.1434),
The word can be constructed from letters of sequentially adjacent cell, where "adjacent" cells are those horizontally or vertically neighboring. The cell itself does not count as an adjacent cell. splitsign('adjacent', 0.5277),('cell', 0.4678),('cells', 0.4486),('neighboring', 0.3426),('vertically', 0.3075),
Distance between two nodes is a number of edges on a path between the nodes (there will be a unique path between any pair of nodes since it is a tree).splitsign('distance', 0.5121),('nodes', 0.4445),('tree', 0.3526),('edges', 0.3049),('path', 0.2037),
The tree is given as an array A, there is an edge between nodes A[i] and i (0 <= i < N). Exactly one of the i's will have A[i] equal to -1, it will be root node.splitsign('tree', 0.5458),('nodes', 0.4726),('root', 0.4209),('node', 0.4198),('edge', 0.2718),
You need to delete an edge in such a way that Product between sum of weight of nodes in one subtree with sum of weight of nodes in other subtree is maximized.splitsign('maximized', 0.4065),('subtree', 0.3937),('nodes', 0.3682),('edge', 0.279),('sum', 0.1975),
The coach of the academy wants to make two teams (not necessary of equal size) but unfortunately, not all people get along, and several refuse to be put on the same team as that of their enemies.splitsign('teams', 0.4315),('academy', 0.4294),('team', 0.3463),('coach', 0.332),('enemies', 0.3273),
Given a 2-D array B of size M x 2 denoting the enemies i.e B[i][0] and B[i][1] both are enemies of each other.splitsign('enemies', 0.5241),('array', 0.4527),('denoting', 0.1499),('given', 0.1035),('size', 0.0859),
Rishabh takes out his Snakes and Ladders Game, stares the board and wonders: "If I can always roll the die to whatever number I want, what would be the least number of rolls to reach the destination?"splitsign('rishabh', 0.4905),('rolls', 0.4186),('roll', 0.389),('number', 0.3074),('die', 0.2787),
Starting from 1 , land on square 100 with the exact roll of the die. If moving the number rolled would place the player beyond square 100, no move is made.splitsign('roll', 0.3731),('moving', 0.3297),('rolled', 0.3231),('square', 0.3109),('100', 0.3081),
If a player lands at the mouth of a snake, the player must go down the snake and come out through the tail. Snakes go down only.splitsign('snake', 0.6067),('snakes', 0.5951),('tail', 0.3293),('mouth', 0.2724),('player', 0.2538),
The board contains N ladders given in a form of 2D matrix A of size N * 2 where (A[i][0], A[i][1]) denotes a ladder that has its base on square A[i][0] and end at square A[i][1].splitsign('ladders', 0.5362),('ladder', 0.5175),('board', 0.4968),('square', 0.4294),('matrix', 0.4274),
The board contains M snakes given in a form of 2D matrix B of size M * 2 where (B[i][0], B[i][1]) denotes a snake that has its mouth on square B[i][0] and tail at square B[i][1].splitsign('snakes', 0.5623),('snake', 0.5336),('board', 0.4352),('matrix', 0.4235),('square', 0.341),
Two cells are said to be connected if they are adjacent to each other horizontally, vertically, or diagonally.splitsign('cells', 0.5479),('adjacent', 0.4475),('connected', 0.3775),('vertically', 0.34),('diagonally', 0.3299),
If one or more filled cells are also connected, they form a region. Find the length of the largest region.splitsign('cells', 0.4292),('region', 0.3608),('connected', 0.2441),('filled', 0.237),('largest', 0.2284),
You are given a AB character matrix named C. Every cell in C has a character U,R,L or D indicating up,right,left and down.splitsign('matrix', 0.5199),('ab', 0.3615),('cell', 0.3451),('left', 0.271),('character', 0.2585),
Like: If a cell contains character U and you go right instead of Up you have to pay 1 unit of cost.splitsign('cell', 0.4094),('cost', 0.3474),('unit', 0.252),('pay', 0.2227),('character', 0.1755),
Also, Rishabh has some M good pairs given in a form of 2D matrix C of size M x 2 where (C[i][0], C[i][1]) denotes that two indexes of the permutation A.splitsign('pairs', 0.4233),('matrix', 0.4012),('indexes', 0.3655),('permutation', 0.3544),('rishabh', 0.2988),
You have to tell whether Rishabh can obtain permutation B by performing the above operation any number of times on permutation A.splitsign('rishabh', 0.5367),('permutation', 0.4961),('operation', 0.2035),('obtain', 0.1417),('number', 0.1176),
There are A islands and there are M bridges connecting them. Each bridge has some cost attached to it.splitsign('bridges', 0.6198),('bridge', 0.5426),('islands', 0.5348),('cost', 0.2793),('connecting', 0.185),
It is guaranteed that input data will contain at least one possible scenario in which all islands are connected with each other.splitsign('islands', 0.4798),('input', 0.293),('data', 0.2728),('scenario', 0.2297),('connected', 0.2227),
Some courses may have prerequisites, for example to take course 2 you have to first take course 1, which is expressed as a pair: [1,2].splitsign('prerequisites', 0.6065),('courses', 0.5853),('pair', 0.2216),('course', 0.2034),('example', 0.0578),
Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?splitsign('courses', 0.5375),('prerequisite', 0.485),('pairs', 0.241),('finish', 0.205),('list', 0.2038),
Return 1 if it is possible to finish all the courses, or 0 if it is not possible to finish all the courses.splitsign('return', 0.4599),('courses', 0.4557),('finish', 0.2602),('possible', 0.2018),
Given an undirected graph having A nodes labelled from 1 to A with M edges given in a form of matrix B of size M x 2 where (B[i][0], B[i][1]) represents two nodes B[i][0] and B[i][1] connected by an edge.splitsign('graph', 0.4542),('matrix', 0.4501),('nodes', 0.4247),('edges', 0.3738),('edge', 0.2949),
Given any source point, (C, D) and destination point, (E, F) on a chess board, we need to find whether Knight can move to the destination or not.splitsign('knight', 0.474),('chess', 0.412),('destination', 0.3177),('board', 0.2419),('given', 0.0987),
You need to find the length of the shortest path from C to D if you can use maximum one road from the given roads in E.splitsign('road', 0.4034),('roads', 0.3821),('shortest', 0.3815),('path', 0.3474),('length', 0.2616),
Each bulb has a switch associated with it, however due to faulty wiring, a switch also changes the state of all the bulbs to the right of current bulb.splitsign('bulbs', 0.5249),('bulb', 0.4744),('switch', 0.4727),('wiring', 0.3362),('current', 0.2094),
Given an initial state of all bulbs, find the minimum number of switches you have to press to turn on all the bulbs.splitsign('switches', 0.5037),('bulbs', 0.4484),('minimum', 0.3623),('initial', 0.3284),('turn', 0.2692),
Each bulb has a switch associated with it, however due to faulty wiring, a switch also changes the state of all the bulbs to the right of current bulb.splitsign('bulbs', 0.5249),('bulb', 0.4744),('switch', 0.4727),('wiring', 0.3362),('current', 0.2094),
Given an initial state of all bulbs, find the minimum number of switches you have to press to turn on all the bulbs.splitsign('switches', 0.5037),('bulbs', 0.4484),('minimum', 0.3623),('initial', 0.3284),('turn', 0.2692),
Given an integer array A of size N consisting of unique integers from 1 to N. You can swap any two integers atmost B times.splitsign('swap', 0.5728),('integers', 0.3954),('array', 0.3584),('integer', 0.349),('unique', 0.2247),
There is a row of seats. Assume that it contains N seats adjacent to each other. There is a group of people who are already seated in that row randomly. i.e. some are sitting together & some are scattered.splitsign('seats', 0.5981),('seated', 0.4494),('sitting', 0.4182),('randomly', 0.4072),('people', 0.3814),
Now your target is to make the whole group sit together i.e. next to each other, without having any vacant seat between them in such a way that the total number of hops or jumps to move them should be minimum.splitsign('hops', 0.4459),('jumps', 0.4347),('group', 0.357),('minimum', 0.3133),('sit', 0.2999),
There are N Mice and N holes that are placed in a straight line. Each hole can accomodate only 1 mouse.splitsign('mice', 0.5748),('mouse', 0.5181),('holes', 0.331),('hole', 0.2743),('line', 0.2675),
A mouse can stay at his position, move one step right from x to x + 1, or move one step left from x to x − 1. Any of these moves consumes 1 minute.splitsign('mouse', 0.531),('moves', 0.3829),('minute', 0.3049),('position', 0.2686),('step', 0.2024),
Return the minimum starting gas station’s index if you can travel around the circuit once, otherwise return -1.splitsign('circuit', 0.356),('index', 0.3537),('minimum', 0.3308),('return', 0.3038),('starting', 0.2983),
You can only travel in one direction. i to i+1, i+2, … n-1, 0, 1, 2.. Completing the circuit means starting at i and splitsign('circuit', 0.5143),('completing', 0.3679),('travel', 0.3561),('direction', 0.3409),('starting', 0.2234),
For Given Number N find if its COLORFUL number or notReturn 0/1in order in an array and return the array from your function ( Looking at the function signature will make things clearer ). Note that, if no pair exists, return empty list.If multiple solutions exist, output the one where index2 is minimum. If there are multiple solutions with the minimum index2, choose the one with minimum index1 out of them. Input: [2, 7, 11, 15], target=9 Output: index1 = 1, index2 = 2splitsign('minimum', 0.3897),('array', 0.3349),('pair', 0.3146),('function', 0.3119),('solutions', 0.2871),
Given an integer array A of size N containing 0's and 1's only. You need to find the length of the longest subarray having count of 1’s one more than count of 0’s.splitsign('subarray', 0.5111),('array', 0.3942),('longest', 0.3579),('length', 0.3184),('count', 0.2879),
Given an integer array A of size N, find the first repeating element in it.We need to find the element that occurs more than once and whose index of first occurrence is smallest.If there is no repeating element, return -1.splitsign('repeating', 0.3555),('array', 0.3469),('smallest', 0.3455),('occurrence', 0.3339),('integer', 0.3214),
Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.splitsign('quadruplets', 0.5211),('integers', 0.4079),('sum', 0.3304),('array', 0.327),('target', 0.3024),
Given an array of strings, return all groups of strings that are anagrams. Represent a group by a list of integers representing the index in the original list. Look at the sample case for clarification.Anagram : a word, phrase, or name formed by rearranging the letters of another, such as 'spar', formed from 'rasp'splitsign('anagram', 0.7127),('anagrams', 0.7067),('strings', 0.3678),('array', 0.3456),('groups', 0.3412),
Given a string A consisting of lowercase characters.Check if characters of the given string can be rearranged to form a palindrome.Return 1 if it is possible to rearrange the characters of the string A such that it becomes a palindrome else return 0.splitsign('palindrome', 0.6296),('string', 0.415),('lowercase', 0.3576),('rearrange', 0.3476),('rearranged', 0.3167),
Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.If the fractional part is repeating, enclose the repeating part in parentheses.splitsign('fraction', 0.6319),('fractional', 0.5436),('denominator', 0.5324),('numerator', 0.5279),('parentheses', 0.4789),
Given a stream of numbers A. On arrival of each number, you need to increase its first occurence by 1 and include this in the stream.Return the final stream of numbers.splitsign('stream', 0.4546),('numbers', 0.3809),('number', 0.3271),('arrival', 0.2605),('occurence', 0.2387),
You are given a string, S, and a list of words, L, that are all of the same length.Find all starting indices of substring(s) in S that is a concatenation of each word in L exactly once and without any intervening characters.splitsign('substring', 0.5262),('concatenation', 0.4476),('string', 0.427),('list', 0.3292),('indices', 0.3155),
Max Heap is a special kind of complete binary tree in which for every node the value present in that node is greater than the value present in it’s children nodes.splitsign('heap', 0.5883),('max', 0.3279),('tree', 0.3043),('binary', 0.2932),('nodes', 0.264),
Find the number of distinct Max Heap can be made from A distinct integers.In short, you have to ensure the following properties for the max heap :Heap has to be a complete binary tree ( A complete binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.)Every node is greater than all its children.splitsign('heap', 0.5206),('max', 0.2629),('binary', 0.2591),('distinct', 0.2564),('integers', 0.2345),
Given two integers arrays A and B of size N each.Find the maximum N elements from the sum combinations (Ai + Bj) formed from elements in array A and B.splitsign('arrays', 0.3848),('combinations', 0.374),('maximum', 0.3542),('array', 0.3436),('sum', 0.2928),
Given an array A , representing seats in each row of a stadium. You need to sell tickets to B people.Each seat costs equal to the number of vacant seats in the row it belongs to. The task is to maximize the profit by selling the tickets to B people.splitsign('tickets', 0.5268),('seats', 0.5052),('stadium', 0.4424),('profit', 0.4127),('maximize', 0.3895),
Given N bags, each bag contains Bi chocolates. There is a kid and a magician. In one unit of time, kid chooses a random bag i, eats Bi chocolates, then themagician fills the ith bag with floor(Bi/2) chocolates.Find the maximum number of chocolates that kid can eat in A units of time.splitsign('chocolates', 0.4588),('maximum', 0.369),('random', 0.3251),('bags', 0.3053),('themagician', 0.2966),
Given two equally sized 1-D arrays A, B containing N integers each.A sum combination is made by adding one element from array A and another element of array B.Return the maximum C valid sum combinations from all the possible sum combinations.splitsign('combinations', 0.4912),('combination', 0.4546),('arrays', 0.4287),('array', 0.3376),('sum', 0.3258),
You are given an array of N integers, A1, A2 ,..., AN and an integer B. Return the of count of distinct numbers in all windows of size B. Formally, return an array of size N-B+1 where i'th element in this array contains number of distinct elements in sequence Ai, Ai+1 ,..., Ai+B-1.Design and implement a data structure for LRU (Least Recently Used) cache. It should support the following operations: get and set.splitsign('distinct', 0.3538),('array', 0.331),('lru', 0.3114),('numbers', 0.3082),('count', 0.297),
Given a singly linked list and an integer K, reverses the nodes of thelist K at a time and returns modified linked list.splitsign('reverses', 0.4577),('nodes', 0.4046),('list', 0.3353),('linked', 0.2726),('thelist', 0.2647),
Given a linked list A of length N and an integer B.You need to reverse every alternate B nodes in the linked list Asplitsign('reverse', 0.4604),('nodes', 0.4307),('list', 0.2926),('linked', 0.2798),('alternate', 0.2316),
Given a Linked List A consisting of N nodes.The Linked List is binary i.e data values in the linked list nodes consist of only 0's and 1's.You need to sort the linked list and return the new linked list.splitsign('sort', 0.4557),('nodes', 0.3299),('list', 0.2981),('binary', 0.2745),('linked', 0.2538),
Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.You should preserve the original relative order of the nodes in each of the two partitions.splitsign('nodes', 0.3883),('partitions', 0.3048),('partition', 0.3024),('list', 0.2431),('order', 0.2309),
Given a linked list A of length N and an integer B.You need to find the value of the Bth node from the middle towards the beginning of the Linked List A.If no such element exists, then return -1.splitsign('node', 0.3644),('list', 0.3189),('linked', 0.2656),('integer', 0.249),('element', 0.232),
Given a singly linked list, determine if its a palindrome. Return 1 or 0 denoting if its a palindrome or not, respectively.splitsign('palindrome', 0.6204),('list', 0.3273),('determine', 0.231),('return', 0.2269),('linked', 0.1976),
Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.splitsign('distinct', 0.3165),('nodes', 0.2749),('delete', 0.2127),('linked', 0.2112),('list', 0.2104),
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists, and should also be sorted.splitsign('lists', 0.3676),('merge', 0.3552),('list', 0.3095),('linked', 0.2848),('sorted', 0.2843),
Given the position of a Bishop (A, B) on an 8 * 8 chessboard. Your task is to count the total number of squares that can be visited by the Bishop in one move. The position of the Bishop is denoted using row and column number of the chessboard.splitsign('chessboard', 0.5137),('squares', 0.4092),('bishop', 0.3855),('row', 0.348),('column', 0.3336),
Hamming distance between two non-negative integers is defined as the number of positions at which the corresponding bits are different. Given an array A of N non-negative integers, find the sum of hamming distances of all pairs of integers in the array. Return the answer modulo 1000000007.splitsign('hamming', 0.4815),('distances', 0.4538),('distance', 0.4402),('integers', 0.3969),('modulo', 0.3867),
Fizzbuzz is one of the most basic problems in the coding interview world. Try to write a small and elegant code for this problem. Given a positive integer A, return an array of strings with all the integers from 1 to N. But for multiples of 3 the array should have “Fizz” instead of the number. For the multiples of 5, the array should have “Buzz” instead of the number. For numbers which are multiple of 3 and 5 both, the array should have “FizzBuzz” instead of the number.splitsign('fizzbuzz', 0.646),('fizz', 0.6116),('strings', 0.3681),('buzz', 0.366),('integers', 0.3489),
Given 2 non negative integers m and n, find gcd(m, n) . GCD of 2 integers m and n is defined as the greatest integer g such that g is a divisor of both m and n. Both m and n fit in a 32 bit signed integer.splitsign('gcd', 0.5954),('divisor', 0.4245),('integers', 0.4017),('integer', 0.3949),('32', 0.2721),
Given a string, find the rank of the string amongst its permutations sorted lexicographically. Note that the characters might be repeated. If the characters are repeated, we need to look at the rank in unique permutations.splitsign('permutations', 0.4345),('rank', 0.4276),('string', 0.33),('sorted', 0.3126),('lexicographically', 0.2453),
Given a number A in a form of string. You have to find the smallest number that has same set of digits as A and is greater than A. If A is the greatest possible number with its set of digits, then return -1.splitsign('digits', 0.5582),('number', 0.4338),('string', 0.3805),('smallest', 0.3646),('greater', 0.2056),
There are A cities numbered from 1 to A. You have already visited M cities, the indices of which are given in an array B of M integers. If a city with index i is visited, you can visit either the city with index i-1 (i >= 2) or the city with index i+1 (i < A) if they are not already visited. Eg: if N = 5 and array M consists of [3, 4], then in the first level of moves, you can either visit 2 or 5. You keep visiting cities in this fashion until all the cities are not visited. Find the number of ways in which you can visit all the cities modulo 10^9+7.splitsign('cities', 0.4572),('visited', 0.425),('visiting', 0.404),('visit', 0.4003),('city', 0.38),
The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked ‘Finish’ in the diagram below). How many possible unique paths are there?splitsign('paths', 0.5113),('robot', 0.4081),('grid', 0.3701),('reach', 0.2509),('corner', 0.2363),
Given a string A consisting only of '(' and ')'.You need to find whether parantheses in A is balanced or not ,if it is balanced then return 1 else return 0.splitsign('balanced', 0.4805),('string', 0.4506),('parantheses', 0.2513),('return', 0.1739),('consisting', 0.134),
Implement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack (push, top, pop, and empty).Implement the MyStack class:void push(int x) Pushes element x to the top of the stack.int pop() Removes the element on the top of the stack and returns it.int top() Returns the element on the top of the stack.boolean empty() Returns true if the stack is empty, false otherwise.splitsign('stack', 0.5516),('queues', 0.3953),('lifo', 0.2803),('mystack', 0.2637),('implement', 0.2248),
Given a string A representing an absolute path for a file (Unix-style).Return the string A after simplifying the absolute path.splitsign('path', 0.4322),('string', 0.345),('file', 0.2847),('unix', 0.2787),('simplifying', 0.2252),
Given a string A denoting an expression. It contains the following operators ’+’, ‘-‘, ‘*’, ‘/’.Chech whether A has redundant braces or not.Return 1 if A has redundant braces, else return 0.splitsign('operators', 0.5449),('string', 0.5083),('expression', 0.4657),('braces', 0.442),('redundant', 0.3707),
Given a string A denoting a stream of lowercase alphabets. You have to make new string B.B is formed such that we have to find first non-repeating character each time a character is inserted to the stream and append it at the end to B. If no non-repeating character is found then append '#' at the end of B.splitsign('string', 0.474),('alphabets', 0.4691),('lowercase', 0.4155),('append', 0.3607),('repeating', 0.2964),
Given an array of integers A. There is a sliding window of size B which is moving from the very left of the array to the very right. You can only see the w numbers in the window. Each time the sliding window moves rightwards by one position. You have to find the maximum for each window. The following example will give you more clarity.splitsign('window', 0.4195),('array', 0.417),('sliding', 0.4099),('moves', 0.333),('integers', 0.3224),
Given an array, find the nearest smaller element G[i] for every element A[i] in the array such that the element has an index smaller than i.More formally,G[i] for an element A[i] = an element A[j] such that j is maximum possible AND  j < i AND A[j] < A[i]Elements for which no smaller element exist, consider next smaller element as -1.splitsign('nearest', 0.417),('index', 0.3365),('array', 0.3315),('smaller', 0.3309),('element', 0.2915),
Given an array of integers A .A represents a histogram i.e A[i] denotes height of the ith histogram's bar. Width of each bar is 1.Find the area of the largest rectangle formed by the histogram.splitsign('histogram', 0.5927),('rectangle', 0.4211),('largest', 0.3247),('area', 0.3198),('array', 0.2984),
Given an integer array A of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.splitsign('raining', 0.5357),('array', 0.4102),('elevation', 0.3871),('water', 0.3469),('compute', 0.346),
Given a string A consisting of lowercase characters. You have to find the number of substrings in A which starts with vowel and end with consonants or vice-versa. Return the count of substring modulo 109 + 7.splitsign('substrings', 0.5097),('substring', 0.4779),('vowel', 0.4687),('consonants', 0.4502),('string', 0.4252),
Given the array of strings A, you need to find the longest string S which is the prefix of ALL the strings in the array. Longest common prefix for a pair of strings S1 and S2 is the longest string S which is the prefix of both S1 and S2.splitsign('strings', 0.4716),('string', 0.4481),('longest', 0.3916),('array', 0.3683),('prefix', 0.3229),
The count-and-say sequence is the sequence of integers beginning as follows:  1, 11, 21, 1211, 111221, ... 1 is read off as one 1 or 11. 11 is read off as two 1s or 21. 21 is read off as one 2, then one 1 or 1211. Given an integer n, generate the nth sequence.splitsign('sequence', 0.4845),('1211', 0.4302),('integers', 0.3627),('integer', 0.3489),('111221', 0.3484),
Given an string A. The only operation allowed is to insert characters in the beginning of the string. Find how many minimum characters are needed to be inserted to make the string a palindrome string.splitsign('palindrome', 0.6208),('string', 0.4453),('inserted', 0.3118),('minimum', 0.2805),('insert', 0.2711),
Given an array of words and a length L, format the text such that each line has exactly L characters and is fully (left and right) justified. You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly L characters. Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right. For the last line of text, it should be left justified and no extra space is inserted between words. Your program should return a list of strings, where each string represents a single line.splitsign('strings', 0.4111),('words', 0.3728),('string', 0.3625),('spaces', 0.3472),('text', 0.3338),
Given a binary search tree A, where each node contains a positive integer, and an integer B, you have to find whether or not there exist two different nodes X and Y such that X.value + Y.value = B.Return 1 to denote that two such nodes exist. Return 0, otherwise.splitsign('binary', 0.4476),('tree', 0.3674),('nodes', 0.3523),('node', 0.3088),('integer', 0.3065),
Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.The first call to next() will return the smallest number in BST. Calling next() again will return the next smallest number in the BST, and so on.splitsign('smallest', 0.4563),('binary', 0.4388),('tree', 0.3428),('iterator', 0.3034),('node', 0.2946),
Given a set of reviews provided by the customers for different hotels and a string containing Good Words, you need to sort the reviews in descendingsplitsign('sort', 0.4718),('hotels', 0.3854),('descending', 0.3647),('reviews', 0.3508),('customers', 0.2611),
orderaccording to their Goodness Value (Higher goodness value first). We define the Goodness Value of a string as the number of Good Words in that string.splitsign('orderaccording', 0.6337),('string', 0.3667),('words', 0.2903),('value', 0.2482),('higher', 0.2304),
NOTE: Sorting should be stable. If review i and review j have the same Goodness Value then their original order would be preserved.You are expected to use Trie in an Interview for such problemssplitsign('sorting', 0.5135),('review', 0.447),('order', 0.3994),('trie', 0.2868),('interview', 0.1805),
Given a binary tree denoted by root node A and a leaf node B from this tree.It is known that all nodes connected to a given node (left child, right child and parent) get burned in 1 second. Then all the nodes which are connected through one intermediate get burned in 2 seconds, and so on.You need to find the minimum time required to burn the complete binary tree.splitsign('tree', 0.4315),('nodes', 0.4157),('node', 0.3736),('seconds', 0.3644),('burned', 0.3453),
Given a binary tree, find its maximum depth.The maximum depth of a binary tree is the number of nodes along the longest path from the root node down to the farthest leaf node.splitsign('tree', 0.4523),('depth', 0.4388),('nodes', 0.3541),('farthest', 0.3458),('binary', 0.3428),
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.An example is the root-to-leaf path 1->2->3 which represents the number 123.Find the total sum of all root-to-leaf numbers % 1003.splitsign('digits', 0.4229),('tree', 0.4156),('numbers', 0.4143),('sum', 0.4002),('binary', 0.3835),
Given a binary treestruct TreeLinkNode {TreeLinkNode *left;TreeLinkNode *right;TreeLinkNode *next; }Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.Initially, all next pointers are set to NULL.splitsign('treelinknode', 0.6452),('treestruct', 0.4741),('pointer', 0.4041),('pointers', 0.3758),('null', 0.3479),
Given a binary tree A of integers. Return an array of integers representing the right view of the Binary tree.Right view of a Binary Tree: is a set of nodes visible when the tree is visited from Right side.splitsign('tree', 0.4993),('binary', 0.4496),('view', 0.4264),('nodes', 0.4153),('array', 0.333),
You are given the following :A positive number NHeights : A list of heights of N persons standing in a queueInfronts : A list of numbers corresponding to each person (P) that gives the number of persons who are taller than P and standing in front of PYou need to return list of actual order of persons’s heightsplitsign('heights', 0.527),('height', 0.4836),('standing', 0.4363),('taller', 0.4223),('numbers', 0.3959),
Given two binary trees, write a function to check if they are equal or not.Two binary trees are considered equal if they are structurally identical and the nodes have the same value.Return 0 / 1 ( 0 for false, 1 for true ) for this problemsplitsign('binary', 0.4422),('equal', 0.3908),('trees', 0.3832),('nodes', 0.2858),('function', 0.2621),
Given an one-dimensional unsorted array A containing N integers.You are also given an integer B, find if there exists a pair of elements in the array whose difference is B.Return 1 if any such pair exists else return 0.splitsign('array', 0.4197),('integers', 0.382),('integer', 0.3565),('unsorted', 0.3547),('pair', 0.2541),
Given an array A of N non-negative numbers and you are also given non-negative number B.You need to find the number of subarrays in A having sum less than B. We may assume that there is no overflow.splitsign('subarrays', 0.5735),('array', 0.3785),('sum', 0.3444),('numbers', 0.2526),('overflow', 0.2432),
Given an array A of positive integers,call a (contiguous,not necessarily distinct) subarray of A good if the number of different integers in that subarray is exactly B.Return the number of good subarrays of A.splitsign('subarrays', 0.6309),('subarray', 0.613),('contiguous', 0.4594),('array', 0.4157),('distinct', 0.2974),
You are given an integer array A containing N integers.You can remove atmost one subarray from it such that the remaining elements must occur atmost two times.Find the minimum size of the subarray you need to remove such that remaining elements must occur for atmost two times.splitsign('subarray', 0.5183),('array', 0.4135),('integers', 0.3444),('integer', 0.3438),('atmost', 0.2706),
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.splitsign('triplets', 0.3993),('integers', 0.3937),('sum', 0.3243),('array', 0.3173),('zero', 0.2086),
Your task is to remove all the duplicates and return a sorted array of distinct elements consisting of all distinct elements present in A.But, instead of returning an answer array, you have to rearrange the given array in-place such that it resembles what has been described above. Hence, return a single integer, the index(1-based) till which the answer array would reside in the given array A.splitsign('array', 0.3902),('distinct', 0.3688),('duplicates', 0.3483),('rearrange', 0.2158),('elements', 0.2052),
Find the intersection of two sorted arrays. OR in other words, Given 2 sorted arrays, find all the elements which occur in both the arrays.splitsign('arrays', 0.4843),('intersection', 0.467),('sorted', 0.2406),('elements', 0.2308),('given', 0.148),
Given a sorted array, remove the duplicates in place such that each element can appear atmost twice and return the new length.Do not allocate extra space for another array, you must do this in place with constant memory.splitsign('array', 0.4016),('duplicates', 0.3374),('allocate', 0.2757),('sorted', 0.2554),('twice', 0.2081),
Given an array and a value, remove all the instances of that value in the array. Also return the number of elements left in the array after the operation.It does not matter what is left beyond the expected length.splitsign('array', 0.4888),('length', 0.3277),('remove', 0.2954),('number', 0.2551),('elements', 0.2537),
Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.splitsign('sort', 0.5147),('colors', 0.4973),('array', 0.4324),('blue', 0.4036),('colored', 0.4022),
There is a corridor in a Jail which is N units long. Given an array A of size N. The ith index of this array is 0 if the light at ith position is faulty otherwise it is 1. All the lights are of specific power B which if is placed at position X, it can light the corridor from [ X-B+1, X+B-1 ]. Initially all lights are off. Return the minimum number of lights to be turned ON to light the whole corridor or -1 if the whole corridor cannot be lighted.splitsign('lights', 0.4964),('light', 0.4611),('lighted', 0.4318),('array', 0.4231),('corridor', 0.3363),
Given a non-negative number represented as an array of digits, add 1 to the number ( increment the number represented by the digits ). The digits are stored such that the most significant digit is at the head of the list.splitsign('digits', 0.5673),('digit', 0.5292),('number', 0.4723),('increment', 0.4631),('array', 0.3352),
Given a character matrix of size N x M in the form of a string array A of size N where A[i] denotes ith row. Each character in the matrix consists any one of the following three characters {'r', 'g', 'b'} where 'r' denotes red color similarly 'g' denotes green color and 'b' denotes blue color. You have to find the area of the largest triangle that has one side parallel to y-axis i.e vertical and the color of all three vertices are different.splitsign('matrix', 0.4095),('triangle', 0.3491),('string', 0.3357),('vertices', 0.3318),('array', 0.2957),
You are given a binary string A consisting of characters A1, A2, ..., AN. In a single operation, you can choose two indices L and R such that 1 ≤ L ≤ R ≤ N and flip the characters AL, AL+1, ..., AR. By flipping, we mean change character 0 to 1 and vice-versa. Your aim is to perform ATMOST one operation such that in final string number of 1s is maximised. If you don't want to perform the operation, return an empty array. Else, return an array consisting of two elements denoting L and R. If there are multiple solutions, return the lexicographically smallest pair of L and R.splitsign('binary', 0.5351),('string', 0.3762),('flip', 0.3644),('flipping', 0.3497),('array', 0.3389),
Given an integer array A of size N. You need to check that whether there exist a element which is strictly greater than all the elements on left of it and strictly smaller than all the elements on right of it. If it exists return 1 else return 0.splitsign('array', 0.4463),('integer', 0.3992),('elements', 0.2411),('element', 0.2344),('check', 0.2174),
Given an integer array A of size N. You need to count the number of special elements in the given array. A element is special if removal of that element make the array balanced. Array will be balanced if sum of even index element equal to sum of odd index element.splitsign('balanced', 0.4317),('array', 0.3646),('integer', 0.3228),('elements', 0.2925),('element', 0.2501),
A hotel manager has to process N advance bookings of rooms for the next season. His hotel has C rooms. Bookings contain an arrival date and a departure date. He wants to find out whether there are enough rooms in the hotel to satisfy the demand. Write a program that solves this problem in time O(N log N) .splitsign('bookings', 0.5385),('hotel', 0.5216),('rooms', 0.4683),('program', 0.3151),('problem', 0.3026),
You're given a read only array of n integers. Find out if any integer occurs more than n/3 times in the array in linear time and constant additional space. If so, return the integer. If not, return -1. If there are multiple solutions, return any one.splitsign('array', 0.4542),('integer', 0.4391),('integers', 0.4369),('linear', 0.3408),('solutions', 0.3108),
The set [1,2,3,…,n] contains a total of n! unique permutations.By listing and labeling all of the permutations in order,We get the following sequence (ie, for n = 3 ) :splitsign('permutations', 0.6076),('sequence', 0.331),('order', 0.1923),('set', 0.1872),('unique', 0.186),
The gray code is a binary numeral system where two successive values differ in only one bit.Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.splitsign('binary', 0.5417),('gray', 0.4939),('code', 0.4706),('numeral', 0.3489),('bits', 0.3172),
Given an integer n, return all distinct solutions to the n-queens puzzle.Each solution contains a distinct board configuration of the n-queens’ placement, where 'Q' and '.' both indicate a queen and an empty space respectively.splitsign('queens', 0.4941),('queen', 0.4923),('board', 0.4185),('solutions', 0.3984),('solution', 0.3403),
There is given an integer array A of size N denoting the heights of N trees. Lumberjack Ojas needs to chop down B metres of wood. It is an easy job for him since he has a nifty new woodcutting machine that can take down forests like wildfire. However, Ojas is only allowed to cut a single row of trees. Ojas's machine works as follows: Ojas sets a height parameter H (in metres), and the machine raises a giant sawblade to that height and cuts off all tree parts higher than H (of course, trees not higher than H meters remain intact). Ojas then takes the parts that were cut off. For example, if the tree row contains trees with heights of 20, 15, 10, and 17 metres, and Ojas raises his sawblade to 15 metres, the remaining tree heights after cutting will be 15, 15, 10, and 15 metres, respectively, while Ojas will take 5 metres off the first tree and 2 metres off the fourth tree (7 metres of wood in total). Ojas is ecologically minded, so he doesn't want to cut off more wood than necessary. That's why he wants to set his sawblade as high as possible. Help Ojas find the maximum integer height of the sawblade that still allows him to cut off at least B metres of wood.splitsign('ojas', 0.4663),('cutting', 0.4267),('lumberjack', 0.418),('woodcutting', 0.4164),('trees', 0.3739),
Given a sorted array of integers A(0 based index) of size N, find the starting and ending position of a given integar B in array A. Your algorithm’s runtime complexity must be in the order of O(log n). Return an array of size 2, such that first element = starting position of B in A and second element = ending position of B in A, if B is not found in A return [-1, -1].splitsign('algorithm', 0.526),('array', 0.3373),('complexity', 0.2949),('index', 0.2877),('sorted', 0.2877),
Given a matrix of integers A of size N x M and an integer B. Write an efficient algorithm that searches for integar B in matrix A. This matrix A has the following properties: 1. Integers in each row are sorted from left to right. 2. The first integer of each row is greater than or equal to the last integer of the previous row. Return 1 if B is present in A, else return 0.splitsign('algorithm', 0.4962),('matrix', 0.461),('integers', 0.3141),('integer', 0.3125),('integar', 0.2921),
Given an array of integers A of size N and an integer B. College library has N bags,the ith book has A[i] number of pages. You have to allocate books to B number of students so that maximum number of pages alloted to a student is minimum. A book will be allocated to exactly one student. Each student has to be allocated at least one book. Allotment should be in contiguous order for example: A student cannot be allocated book 1 and book 3, skipping book 2. Calculate and return that minimum possible number.splitsign('students', 0.3932),('allocated', 0.382),('books', 0.3631),('allocate', 0.3574),('bags', 0.3556),
Given an array of integers A of size N and an integer B. array A is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2 ). You are given a target value B to search. If found in the array, return its index, otherwise return -1. You may assume no duplicate exists in the array.splitsign('array', 0.4346),('index', 0.3564),('integers', 0.3354),('integer', 0.3326),('rotated', 0.3031),
There are many people who believe that the earth is flat and NASA is a scam. They call themselves Flat Earthers. They were already worried that the 6 feet social distancing rule might push some people out of the earth. Now, they decided to think about a new issue. Since the earth is flat ( or so they think), let's imagine it as an infinite 2D grid. They have the coordinates of certain points which are orange zones and have some COVID-19 cases reported. Now each day the orange zones become more fatal. After d days, all the locations within a euclidean distance of d of a particular orange zone can be affected by this zone. They know N orange zones, each of whose coordinates are given by (A[i][0], A[i][1]). Now, a location is considered a red zone if it is affected by at least B orange zones. You need to find the first day at which the first red zone is reported.splitsign('zones', 0.4292),('earth', 0.3919),('zone', 0.3872),('distancing', 0.3545),('earthers', 0.3401),
Given a string A, find the common palindromic sequence ( A sequence which does not need to be contiguous and is a pallindrome), which is common in itself.splitsign('palindromic', 0.5813),('sequence', 0.3912),('contiguous', 0.388),('common', 0.3655),('string', 0.3621),
Given a string A, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.splitsign('substrings', 0.4958),('tree', 0.4891),('string', 0.4787),('recursively', 0.446),('binary', 0.4188),
For example, if we choose the node “gr” and swap its two children, it produces a scrambled string “rgeat”.splitsign('rgeat', 0.4085),('scrambled', 0.3962),('node', 0.3629),('swap', 0.3587),('string', 0.3516),
Similarly, if we continue to swap the children of nodes “eat” and “at”, it produces a scrambled string “rgtae”.splitsign('nodes', 0.4758),('scrambled', 0.4577),('swap', 0.3944),('rgtae', 0.3854),('string', 0.3473),
Given a binary grid A of size N x M consisting of 0's and 1's, find the area of the largest rectangle inside the grid such that all the cells inside the chosen rectangle should have 1 in them.splitsign('rectangle', 0.445),('grid', 0.4085),('area', 0.3083),('largest', 0.2988),('cells', 0.2819),
You are allowed to permutate the columns matrix i.e. you can arrange each of the column in any order in the final grid.splitsign('columns', 0.5078),('arrange', 0.4497),('grid', 0.4444),('permutate', 0.439),('column', 0.4137),
There are a row of N houses, each house can be painted with one of the three colors: red, blue or green.splitsign('colors', 0.4904),('houses', 0.4568),('painted', 0.415),('blue', 0.4026),('house', 0.4021),
The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.splitsign('painting', 0.419),('paint', 0.3909),('houses', 0.3335),('house', 0.2535),('cost', 0.2474),
For example, A[0][0] is the cost of painting house 0 with color red; A[1][2] is the cost of painting house 1 with color green, and so on.splitsign('painting', 0.3215),('color', 0.3144),('red', 0.3108),('green', 0.2957),('cost', 0.2542),
In other words, find a subsequence of array in which the subsequence’s elements are in strictly increasing order, and in which the subsequence is as long as possible. splitsign('subsequence', 0.6736),('array', 0.3701),('increasing', 0.3155),('order', 0.2308),('strictly', 0.1969),
If Tushar’s resistance is denoted by A (>=0) then find the lexicographically smallest order of friends to kick Tushar so that the cumulative kick strength (sum of the strengths of friends who kicks) doesn’t exceed his resistance capacity and total no. of kicks hit are maximum.splitsign('tushar', 0.4889),('kick', 0.464),('kicks', 0.4435),('resistance', 0.4123),('strength', 0.3313),
Also note that each friend can kick unlimited number of times (If a friend hits x times, his strength will be counted x times)splitsign('strength', 0.4258),('kick', 0.3597),('unlimited', 0.3254),('times', 0.2712),('hits', 0.2575),
Return the lexicographically smallest array of maximum length where the ith index represents the index of the friend who will hit.splitsign('array', 0.4202),('smallest', 0.3934),('index', 0.3123),('maximum', 0.3017),('length', 0.2918),
Given an array of non-negative integers, A, of length N, you are initially positioned at the first index of the array.splitsign('array', 0.4717),('index', 0.3816),('positioned', 0.3722),('integers', 0.3649),('length', 0.2603),
Find out the number of N digit numbers, whose digits on being added equals to a given number S. Note that a valid number starts from digits 1-9 except the number 0 itself. i.e. leading zeroes are not allowed.splitsign('digits', 0.6002),('digit', 0.5653),('numbers', 0.4855),('number', 0.4339),('zeroes', 0.3614),
Given a 3 x A board, find the number of ways to color it using at most 4 colors such that no 2 adjacent boxes have same color.splitsign('colors', 0.4005),('board', 0.3792),('boxes', 0.3637),('color', 0.3135),('adjacent', 0.2821),
Two players take turns to take a coin from one of the ends of the line until there are no more coins left.splitsign('coin', 0.564),('coins', 0.5206),('turns', 0.3706),('ends', 0.3521),('line', 0.3266),
You know that there exists a floor C with 0 <= C <= B such that any egg dropped at a floor higher than C will break, and any egg dropped at or below floor C will not break.splitsign('egg', 0.4985),('floor', 0.3702),('break', 0.3423),('dropped', 0.2301),('higher', 0.2067),
Each move, you may take an egg (if you have an unbroken one) and drop it from any floor X (with 1 <= X <= B). splitsign('floor', 0.4301),('egg', 0.3626),('drop', 0.3305),('unbroken', 0.1203),
What is the minimum number of moves that you need to know with certainty what C is, regardless of the initial value of Csplitsign('moves', 0.4837),('minimum', 0.3371),('initial', 0.2733),('certainty', 0.265),('value', 0.194),
You are given Q queries, in each query you are given two integers u and v and you are required to find the maximum weighted edge in a simple path from u to v.splitsign('weighted', 0.4221),('queries', 0.3382),('query', 0.3239),('edge', 0.3206),('maximum', 0.3151),
Two kingdoms are on a war right now, kingdom X and kingdom Y. As a war specialist of kingdom X, you scouted kingdom Y area.splitsign('kingdoms', 0.6427),('kingdom', 0.6313),('war', 0.4151),('scouted', 0.3548),('area', 0.316),
The strength can also be negative, representing those warriors of your kingdom who were held hostages.splitsign('strength', 0.4388),('hostages', 0.3704),('kingdom', 0.3687),('negative', 0.2666),('warriors', 0.2369),
The strength of any village on row larger than one (2<=r<=N) is stronger or equal to the strength of village which is exactly above it.splitsign('village', 0.4008),('stronger', 0.3872),('strength', 0.3666),('row', 0.3242),('larger', 0.233),
The strength of any village on column larger than one (2<=c<=M) is stronger or equal to the strength of vilage which is exactly to its left.splitsign('village', 0.4255),('column', 0.3789),('strength', 0.3715),('stronger', 0.3654),('vilage', 0.2668),
So your task is, find the largest sum of strength that you can erase by bombing one sub-matrix in the grid.splitsign('matrix', 0.4924),('grid', 0.427),('largest', 0.2743),('bombing', 0.2699),('strength', 0.2672),
You need to divide the array A into two subsets S1 and S2 such that the absolute difference between their sums is minimum.splitsign('sums', 0.3589),('array', 0.3223),('minimum', 0.2926),('subsets', 0.2903),('s1', 0.2287),
The demons had captured the princess (P) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (K) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess.splitsign('knight', 0.4619),('dungeon', 0.4542),('princess', 0.4531),('valiant', 0.3497),('imprisoned', 0.3467),
The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately.splitsign('knight', 0.4658),('dies', 0.314),('health', 0.266),('integer', 0.2158),('initial', 0.2008),
Some of the rooms are guarded by demons, so the knight loses health (negative integers) upon entering these rooms; other rooms are either empty (0’s) or contain magic orbs that increase the knight’s health (positive integers).splitsign('rooms', 0.4392),('knight', 0.4119),('health', 0.2762),('demons', 0.2714),('integers', 0.2624),
In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step.splitsign('princess', 0.4523),('knight', 0.4309),('reach', 0.3002),('downward', 0.2814),('rightward', 0.2701),
Write a function to determine the knight’s minimum initial health so that he is able to rescue the princess.splitsign('knight', 0.4606),('princess', 0.422),('function', 0.3103),('health', 0.29),('initial', 0.2729),
For example, given the dungeon below, the initial health of the knight must be at least 7 if he follows the optimal pathsplitsign('knight', 0.3817),('dungeon', 0.3373),('path', 0.3318),('optimal', 0.3265),('health', 0.209),
There is a rod of length N lying on x-axis with its left end at x = 0 and right end at x = N. Now, there are M weak points on this rod denoted by positive integer values(all less than N) A1, A2, …, AM. You have to cut rod at all these weak points. You can perform these cuts in any order. After a cut, rod gets divided into two smaller sub-rods. Cost of making a cut is the length of the sub-rod in which you are making a cut.splitsign('cut', 0.4417),('cuts', 0.4409),('rods', 0.4405),('rod', 0.3589),('cost', 0.2825),
Your aim is to minimise this cost. Return an array denoting the sequence in which you will make cuts. If two different sequences of cuts give same cost, return the lexicographically smallest.splitsign('cuts', 0.4626),('minimise', 0.4605),('sequences', 0.4036),('sequence', 0.3939),('smallest', 0.3932),
If you were only permitted to complete at most one transaction (i.e, buy one and sell one share of the stock), design an algorithm to find the maximum profit.splitsign('profit', 0.4826),('stock', 0.3702),('maximum', 0.3698),('algorithm', 0.2824),('sell', 0.2741),
You are given a sequence of black and white horses, and a set of K stables numbered 1 to K. You have to accommodate the horses into the stables in such a way that the following conditions are satisfied:splitsign('stables', 0.6198),('horses', 0.5163),('white', 0.2463),('conditions', 0.2449),('set', 0.2319),
You fill the horses into the stables preserving the relative order of horses. For instance, you cannot put horse 1 into stable 2 and horse 2 into stable 1. You have to preserve the ordering of the horses.splitsign('stables', 0.6098),('horses', 0.5061),('horse', 0.461),('ordering', 0.3147),('preserving', 0.3052),
Take the product (number of white horses * number of black horses) for each stable and take the sum of all these products. This value should be the minimum among all possible accommodation arrangementssplitsign('arrangements', 0.455),('horses', 0.4229),('minimum', 0.4058),('accommodation', 0.3864),('value', 0.2553),
Given an integer array A of size N. You have to merge all the elements of the array into one with the minimum possible cost.splitsign('array', 0.3779),('integer', 0.3133),('minimum', 0.3009),('cost', 0.2584),('merge', 0.218),
·  Choose any two adjacent elements of the array with values say X and Y and merge them into a single element with value (X + Y) paying a total cost of (X + Y).splitsign('array', 0.4384),('adjacent', 0.2946),('paying', 0.2918),('cost', 0.275),('total', 0.2605),
As it is Tushar’s Birthday on March 1st, he decided to throw a party to all his friends at TGI Fridays in Pune.splitsign('tushar', 0.5426),('party', 0.4162),('birthday', 0.3802),('tgi', 0.3758),('fridays', 0.3249),
Given are the eating capacity of each friend, filling capacity of each dish and cost of each dish. A friend is satisfied if the sum of the filling capacity of dishes he ate is equal to his capacity. Find the minimum cost such that all of Tushar’s friends are satisfied (reached their eating capacity).splitsign('minimum', 0.4261),('capacity', 0.3856),('tushar', 0.3602),('dishes', 0.3432),('sum', 0.3401),
Given two integer arrays A and B of size N each which represent values and weights associated with N items respectively.splitsign('arrays', 0.5083),('weights', 0.3992),('values', 0.2354),('items', 0.2279),('integer', 0.223),
Find out the maximum value subset of A such that sum of the weights of this subset is smaller than or equal to C.splitsign('subset', 0.4086),('weights', 0.3924),('maximum', 0.3475),('sum', 0.299),('value', 0.1896),
You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).splitsign('transactions', 0.428),('stock', 0.4213),('multiple', 0.351),('sell', 0.2968),('buy', 0.2851),
However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).splitsign('transactions', 0.4038),('stock', 0.3853),('multiple', 0.2791),('sell', 0.2542),('buy', 0.2494),
Given an directed graph having A nodes labelled from 1 to A containing M edges given by matrix B of size M x 2such that there is a edge directed from nodesplitsign('matrix', 0.4118),('nodes', 0.3984),('edges', 0.3593),('graph', 0.3561),('directed', 0.2944),
Given an N x M matrix A of non-negative integers representing the height of each unit cell in a continent, the "Blue lake" touches the left and top edges of the matrix and the "Red lake" touches the right and bottom edges.splitsign('matrix', 0.3843),('lake', 0.3638),('continent', 0.3185),('edges', 0.2886),('cell', 0.2749),
Water can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.splitsign('flow', 0.3786),('cell', 0.3747),('water', 0.2347),('directions', 0.1716),('lower', 0.1434),
The word can be constructed from letters of sequentially adjacent cell, where "adjacent" cells are those horizontally or vertically neighboring. The cell itself does not count as an adjacent cell. splitsign('adjacent', 0.5277),('cell', 0.4678),('cells', 0.4486),('neighboring', 0.3426),('vertically', 0.3075),
Distance between two nodes is a number of edges on a path between the nodes (there will be a unique path between any pair of nodes since it is a tree).splitsign('distance', 0.5121),('nodes', 0.4445),('tree', 0.3526),('edges', 0.3049),('path', 0.2037),
The tree is given as an array A, there is an edge between nodes A[i] and i (0 <= i < N). Exactly one of the i's will have A[i] equal to -1, it will be root node.splitsign('tree', 0.5458),('nodes', 0.4726),('root', 0.4209),('node', 0.4198),('edge', 0.2718),
You need to delete an edge in such a way that Product between sum of weight of nodes in one subtree with sum of weight of nodes in other subtree is maximized.splitsign('maximized', 0.4065),('subtree', 0.3937),('nodes', 0.3682),('edge', 0.279),('sum', 0.1975),
The coach of the academy wants to make two teams (not necessary of equal size) but unfortunately, not all people get along, and several refuse to be put on the same team as that of their enemies.splitsign('teams', 0.4315),('academy', 0.4294),('team', 0.3463),('coach', 0.332),('enemies', 0.3273),
Given a 2-D array B of size M x 2 denoting the enemies i.e B[i][0] and B[i][1] both are enemies of each other.splitsign('enemies', 0.5241),('array', 0.4527),('denoting', 0.1499),('given', 0.1035),('size', 0.0859),
Rishabh takes out his Snakes and Ladders Game, stares the board and wonders: "If I can always roll the die to whatever number I want, what would be the least number of rolls to reach the destination?"splitsign('rishabh', 0.4905),('rolls', 0.4186),('roll', 0.389),('number', 0.3074),('die', 0.2787),
Starting from 1 , land on square 100 with the exact roll of the die. If moving the number rolled would place the player beyond square 100, no move is made.splitsign('roll', 0.3731),('moving', 0.3297),('rolled', 0.3231),('square', 0.3109),('100', 0.3081),
If a player lands at the mouth of a snake, the player must go down the snake and come out through the tail. Snakes go down only.splitsign('snake', 0.6067),('snakes', 0.5951),('tail', 0.3293),('mouth', 0.2724),('player', 0.2538),
The board contains N ladders given in a form of 2D matrix A of size N * 2 where (A[i][0], A[i][1]) denotes a ladder that has its base on square A[i][0] and end at square A[i][1].splitsign('ladders', 0.5362),('ladder', 0.5175),('board', 0.4968),('square', 0.4294),('matrix', 0.4274),
The board contains M snakes given in a form of 2D matrix B of size M * 2 where (B[i][0], B[i][1]) denotes a snake that has its mouth on square B[i][0] and tail at square B[i][1].splitsign('snakes', 0.5623),('snake', 0.5336),('board', 0.4352),('matrix', 0.4235),('square', 0.341),
Two cells are said to be connected if they are adjacent to each other horizontally, vertically, or diagonally.splitsign('cells', 0.5479),('adjacent', 0.4475),('connected', 0.3775),('vertically', 0.34),('diagonally', 0.3299),
If one or more filled cells are also connected, they form a region. Find the length of the largest region.splitsign('cells', 0.4292),('region', 0.3608),('connected', 0.2441),('filled', 0.237),('largest', 0.2284),
You are given a AB character matrix named C. Every cell in C has a character U,R,L or D indicating up,right,left and down.splitsign('matrix', 0.5199),('ab', 0.3615),('cell', 0.3451),('left', 0.271),('character', 0.2585),
Like: If a cell contains character U and you go right instead of Up you have to pay 1 unit of cost.splitsign('cell', 0.4094),('cost', 0.3474),('unit', 0.252),('pay', 0.2227),('character', 0.1755),
Also, Rishabh has some M good pairs given in a form of 2D matrix C of size M x 2 where (C[i][0], C[i][1]) denotes that two indexes of the permutation A.splitsign('pairs', 0.4233),('matrix', 0.4012),('indexes', 0.3655),('permutation', 0.3544),('rishabh', 0.2988),
You have to tell whether Rishabh can obtain permutation B by performing the above operation any number of times on permutation A.splitsign('rishabh', 0.5367),('permutation', 0.4961),('operation', 0.2035),('obtain', 0.1417),('number', 0.1176),
There are A islands and there are M bridges connecting them. Each bridge has some cost attached to it.splitsign('bridges', 0.6198),('bridge', 0.5426),('islands', 0.5348),('cost', 0.2793),('connecting', 0.185),
It is guaranteed that input data will contain at least one possible scenario in which all islands are connected with each other.splitsign('islands', 0.4798),('input', 0.293),('data', 0.2728),('scenario', 0.2297),('connected', 0.2227),
Some courses may have prerequisites, for example to take course 2 you have to first take course 1, which is expressed as a pair: [1,2].splitsign('prerequisites', 0.6065),('courses', 0.5853),('pair', 0.2216),('course', 0.2034),('example', 0.0578),
Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?splitsign('courses', 0.5375),('prerequisite', 0.485),('pairs', 0.241),('finish', 0.205),('list', 0.2038),
Return 1 if it is possible to finish all the courses, or 0 if it is not possible to finish all the courses.splitsign('return', 0.4599),('courses', 0.4557),('finish', 0.2602),('possible', 0.2018),
Given an undirected graph having A nodes labelled from 1 to A with M edges given in a form of matrix B of size M x 2 where (B[i][0], B[i][1]) represents two nodes B[i][0] and B[i][1] connected by an edge.splitsign('graph', 0.4542),('matrix', 0.4501),('nodes', 0.4247),('edges', 0.3738),('edge', 0.2949),
Given any source point, (C, D) and destination point, (E, F) on a chess board, we need to find whether Knight can move to the destination or not.splitsign('knight', 0.474),('chess', 0.412),('destination', 0.3177),('board', 0.2419),('given', 0.0987),
You need to find the length of the shortest path from C to D if you can use maximum one road from the given roads in E.splitsign('road', 0.4034),('roads', 0.3821),('shortest', 0.3815),('path', 0.3474),('length', 0.2616),
Each bulb has a switch associated with it, however due to faulty wiring, a switch also changes the state of all the bulbs to the right of current bulb.splitsign('bulbs', 0.5249),('bulb', 0.4744),('switch', 0.4727),('wiring', 0.3362),('current', 0.2094),
Given an initial state of all bulbs, find the minimum number of switches you have to press to turn on all the bulbs.splitsign('switches', 0.5037),('bulbs', 0.4484),('minimum', 0.3623),('initial', 0.3284),('turn', 0.2692),
Each bulb has a switch associated with it, however due to faulty wiring, a switch also changes the state of all the bulbs to the right of current bulb.splitsign('bulbs', 0.5249),('bulb', 0.4744),('switch', 0.4727),('wiring', 0.3362),('current', 0.2094),
Given an initial state of all bulbs, find the minimum number of switches you have to press to turn on all the bulbs.splitsign('switches', 0.5037),('bulbs', 0.4484),('minimum', 0.3623),('initial', 0.3284),('turn', 0.2692),
Given an integer array A of size N consisting of unique integers from 1 to N. You can swap any two integers atmost B times.splitsign('swap', 0.5728),('integers', 0.3954),('array', 0.3584),('integer', 0.349),('unique', 0.2247),
There is a row of seats. Assume that it contains N seats adjacent to each other. There is a group of people who are already seated in that row randomly. i.e. some are sitting together & some are scattered.splitsign('seats', 0.5981),('seated', 0.4494),('sitting', 0.4182),('randomly', 0.4072),('people', 0.3814),
Now your target is to make the whole group sit together i.e. next to each other, without having any vacant seat between them in such a way that the total number of hops or jumps to move them should be minimum.splitsign('hops', 0.4459),('jumps', 0.4347),('group', 0.357),('minimum', 0.3133),('sit', 0.2999),
There are N Mice and N holes that are placed in a straight line. Each hole can accomodate only 1 mouse.splitsign('mice', 0.5748),('mouse', 0.5181),('holes', 0.331),('hole', 0.2743),('line', 0.2675),
A mouse can stay at his position, move one step right from x to x + 1, or move one step left from x to x − 1. Any of these moves consumes 1 minute.splitsign('mouse', 0.531),('moves', 0.3829),('minute', 0.3049),('position', 0.2686),('step', 0.2024),
Return the minimum starting gas station’s index if you can travel around the circuit once, otherwise return -1.splitsign('circuit', 0.356),('index', 0.3537),('minimum', 0.3308),('return', 0.3038),('starting', 0.2983),
You can only travel in one direction. i to i+1, i+2, … n-1, 0, 1, 2.. Completing the circuit means starting at i and splitsign('circuit', 0.5143),('completing', 0.3679),('travel', 0.3561),('direction', 0.3409),('starting', 0.2234),
For Given Number N find if its COLORFUL number or notReturn 0/1in order in an array and return the array from your function ( Looking at the function signature will make things clearer ). Note that, if no pair exists, return empty list.If multiple solutions exist, output the one where index2 is minimum. If there are multiple solutions with the minimum index2, choose the one with minimum index1 out of them. Input: [2, 7, 11, 15], target=9 Output: index1 = 1, index2 = 2splitsign('minimum', 0.3897),('array', 0.3349),('pair', 0.3146),('function', 0.3119),('solutions', 0.2871),
Given an integer array A of size N containing 0's and 1's only. You need to find the length of the longest subarray having count of 1’s one more than count of 0’s.splitsign('subarray', 0.5111),('array', 0.3942),('longest', 0.3579),('length', 0.3184),('count', 0.2879),
Given an integer array A of size N, find the first repeating element in it.We need to find the element that occurs more than once and whose index of first occurrence is smallest.If there is no repeating element, return -1.splitsign('repeating', 0.3555),('array', 0.3469),('smallest', 0.3455),('occurrence', 0.3339),('integer', 0.3214),
Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.splitsign('quadruplets', 0.5211),('integers', 0.4079),('sum', 0.3304),('array', 0.327),('target', 0.3024),
Given an array of strings, return all groups of strings that are anagrams. Represent a group by a list of integers representing the index in the original list. Look at the sample case for clarification.Anagram : a word, phrase, or name formed by rearranging the letters of another, such as 'spar', formed from 'rasp'splitsign('anagram', 0.7127),('anagrams', 0.7067),('strings', 0.3678),('array', 0.3456),('groups', 0.3412),
Given a string A consisting of lowercase characters.Check if characters of the given string can be rearranged to form a palindrome.Return 1 if it is possible to rearrange the characters of the string A such that it becomes a palindrome else return 0.splitsign('palindrome', 0.6296),('string', 0.415),('lowercase', 0.3576),('rearrange', 0.3476),('rearranged', 0.3167),
Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.If the fractional part is repeating, enclose the repeating part in parentheses.splitsign('fraction', 0.6319),('fractional', 0.5436),('denominator', 0.5324),('numerator', 0.5279),('parentheses', 0.4789),
Given a stream of numbers A. On arrival of each number, you need to increase its first occurence by 1 and include this in the stream.Return the final stream of numbers.splitsign('stream', 0.4546),('numbers', 0.3809),('number', 0.3271),('arrival', 0.2605),('occurence', 0.2387),
You are given a string, S, and a list of words, L, that are all of the same length.Find all starting indices of substring(s) in S that is a concatenation of each word in L exactly once and without any intervening characters.splitsign('substring', 0.5262),('concatenation', 0.4476),('string', 0.427),('list', 0.3292),('indices', 0.3155),
Max Heap is a special kind of complete binary tree in which for every node the value present in that node is greater than the value present in it’s children nodes.splitsign('heap', 0.5883),('max', 0.3279),('tree', 0.3043),('binary', 0.2932),('nodes', 0.264),
Find the number of distinct Max Heap can be made from A distinct integers.In short, you have to ensure the following properties for the max heap :Heap has to be a complete binary tree ( A complete binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.)Every node is greater than all its children.splitsign('heap', 0.5206),('max', 0.2629),('binary', 0.2591),('distinct', 0.2564),('integers', 0.2345),
Given two integers arrays A and B of size N each.Find the maximum N elements from the sum combinations (Ai + Bj) formed from elements in array A and B.splitsign('arrays', 0.3848),('combinations', 0.374),('maximum', 0.3542),('array', 0.3436),('sum', 0.2928),
Given an array A , representing seats in each row of a stadium. You need to sell tickets to B people.Each seat costs equal to the number of vacant seats in the row it belongs to. The task is to maximize the profit by selling the tickets to B people.splitsign('tickets', 0.5268),('seats', 0.5052),('stadium', 0.4424),('profit', 0.4127),('maximize', 0.3895),
Given N bags, each bag contains Bi chocolates. There is a kid and a magician. In one unit of time, kid chooses a random bag i, eats Bi chocolates, then themagician fills the ith bag with floor(Bi/2) chocolates.Find the maximum number of chocolates that kid can eat in A units of time.splitsign('chocolates', 0.4588),('maximum', 0.369),('random', 0.3251),('bags', 0.3053),('themagician', 0.2966),
Given two equally sized 1-D arrays A, B containing N integers each.A sum combination is made by adding one element from array A and another element of array B.Return the maximum C valid sum combinations from all the possible sum combinations.splitsign('combinations', 0.4912),('combination', 0.4546),('arrays', 0.4287),('array', 0.3376),('sum', 0.3258),
You are given an array of N integers, A1, A2 ,..., AN and an integer B. Return the of count of distinct numbers in all windows of size B. Formally, return an array of size N-B+1 where i'th element in this array contains number of distinct elements in sequence Ai, Ai+1 ,..., Ai+B-1.Design and implement a data structure for LRU (Least Recently Used) cache. It should support the following operations: get and set.splitsign('distinct', 0.3538),('array', 0.331),('lru', 0.3114),('numbers', 0.3082),('count', 0.297),
Given a singly linked list and an integer K, reverses the nodes of thelist K at a time and returns modified linked list.splitsign('reverses', 0.4577),('nodes', 0.4046),('list', 0.3353),('linked', 0.2726),('thelist', 0.2647),
Given a linked list A of length N and an integer B.You need to reverse every alternate B nodes in the linked list Asplitsign('reverse', 0.4604),('nodes', 0.4307),('list', 0.2926),('linked', 0.2798),('alternate', 0.2316),
Given a Linked List A consisting of N nodes.The Linked List is binary i.e data values in the linked list nodes consist of only 0's and 1's.You need to sort the linked list and return the new linked list.splitsign('sort', 0.4557),('nodes', 0.3299),('list', 0.2981),('binary', 0.2745),('linked', 0.2538),
Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.You should preserve the original relative order of the nodes in each of the two partitions.splitsign('nodes', 0.3883),('partitions', 0.3048),('partition', 0.3024),('list', 0.2431),('order', 0.2309),
Given a linked list A of length N and an integer B.You need to find the value of the Bth node from the middle towards the beginning of the Linked List A.If no such element exists, then return -1.splitsign('node', 0.3644),('list', 0.3189),('linked', 0.2656),('integer', 0.249),('element', 0.232),
Given a singly linked list, determine if its a palindrome. Return 1 or 0 denoting if its a palindrome or not, respectively.splitsign('palindrome', 0.6204),('list', 0.3273),('determine', 0.231),('return', 0.2269),('linked', 0.1976),
Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.splitsign('distinct', 0.3165),('nodes', 0.2749),('delete', 0.2127),('linked', 0.2112),('list', 0.2104),
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists, and should also be sorted.splitsign('lists', 0.3676),('merge', 0.3552),('list', 0.3095),('linked', 0.2848),('sorted', 0.2843),
Given the position of a Bishop (A, B) on an 8 * 8 chessboard. Your task is to count the total number of squares that can be visited by the Bishop in one move. The position of the Bishop is denoted using row and column number of the chessboard.splitsign('chessboard', 0.5137),('squares', 0.4092),('bishop', 0.3855),('row', 0.348),('column', 0.3336),
Hamming distance between two non-negative integers is defined as the number of positions at which the corresponding bits are different. Given an array A of N non-negative integers, find the sum of hamming distances of all pairs of integers in the array. Return the answer modulo 1000000007.splitsign('hamming', 0.4815),('distances', 0.4538),('distance', 0.4402),('integers', 0.3969),('modulo', 0.3867),
Fizzbuzz is one of the most basic problems in the coding interview world. Try to write a small and elegant code for this problem. Given a positive integer A, return an array of strings with all the integers from 1 to N. But for multiples of 3 the array should have “Fizz” instead of the number. For the multiples of 5, the array should have “Buzz” instead of the number. For numbers which are multiple of 3 and 5 both, the array should have “FizzBuzz” instead of the number.splitsign('fizzbuzz', 0.646),('fizz', 0.6116),('strings', 0.3681),('buzz', 0.366),('integers', 0.3489),
Given 2 non negative integers m and n, find gcd(m, n) . GCD of 2 integers m and n is defined as the greatest integer g such that g is a divisor of both m and n. Both m and n fit in a 32 bit signed integer.splitsign('gcd', 0.5954),('divisor', 0.4245),('integers', 0.4017),('integer', 0.3949),('32', 0.2721),
Given a string, find the rank of the string amongst its permutations sorted lexicographically. Note that the characters might be repeated. If the characters are repeated, we need to look at the rank in unique permutations.splitsign('permutations', 0.4345),('rank', 0.4276),('string', 0.33),('sorted', 0.3126),('lexicographically', 0.2453),
Given a number A in a form of string. You have to find the smallest number that has same set of digits as A and is greater than A. If A is the greatest possible number with its set of digits, then return -1.splitsign('digits', 0.5582),('number', 0.4338),('string', 0.3805),('smallest', 0.3646),('greater', 0.2056),
There are A cities numbered from 1 to A. You have already visited M cities, the indices of which are given in an array B of M integers. If a city with index i is visited, you can visit either the city with index i-1 (i >= 2) or the city with index i+1 (i < A) if they are not already visited. Eg: if N = 5 and array M consists of [3, 4], then in the first level of moves, you can either visit 2 or 5. You keep visiting cities in this fashion until all the cities are not visited. Find the number of ways in which you can visit all the cities modulo 10^9+7.splitsign('cities', 0.4572),('visited', 0.425),('visiting', 0.404),('visit', 0.4003),('city', 0.38),
The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked ‘Finish’ in the diagram below). How many possible unique paths are there?splitsign('paths', 0.5113),('robot', 0.4081),('grid', 0.3701),('reach', 0.2509),('corner', 0.2363),
Given a string A consisting only of '(' and ')'.You need to find whether parantheses in A is balanced or not ,if it is balanced then return 1 else return 0.splitsign('balanced', 0.4805),('string', 0.4506),('parantheses', 0.2513),('return', 0.1739),('consisting', 0.134),
Implement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack (push, top, pop, and empty).Implement the MyStack class:void push(int x) Pushes element x to the top of the stack.int pop() Removes the element on the top of the stack and returns it.int top() Returns the element on the top of the stack.boolean empty() Returns true if the stack is empty, false otherwise.splitsign('stack', 0.5516),('queues', 0.3953),('lifo', 0.2803),('mystack', 0.2637),('implement', 0.2248),
Given a string A representing an absolute path for a file (Unix-style).Return the string A after simplifying the absolute path.splitsign('path', 0.4322),('string', 0.345),('file', 0.2847),('unix', 0.2787),('simplifying', 0.2252),
Given a string A denoting an expression. It contains the following operators ’+’, ‘-‘, ‘*’, ‘/’.Chech whether A has redundant braces or not.Return 1 if A has redundant braces, else return 0.splitsign('operators', 0.5449),('string', 0.5083),('expression', 0.4657),('braces', 0.442),('redundant', 0.3707),
Given a string A denoting a stream of lowercase alphabets. You have to make new string B.B is formed such that we have to find first non-repeating character each time a character is inserted to the stream and append it at the end to B. If no non-repeating character is found then append '#' at the end of B.splitsign('string', 0.474),('alphabets', 0.4691),('lowercase', 0.4155),('append', 0.3607),('repeating', 0.2964),
Given an array of integers A. There is a sliding window of size B which is moving from the very left of the array to the very right. You can only see the w numbers in the window. Each time the sliding window moves rightwards by one position. You have to find the maximum for each window. The following example will give you more clarity.splitsign('window', 0.4195),('array', 0.417),('sliding', 0.4099),('moves', 0.333),('integers', 0.3224),
Given an array, find the nearest smaller element G[i] for every element A[i] in the array such that the element has an index smaller than i.More formally,G[i] for an element A[i] = an element A[j] such that j is maximum possible AND  j < i AND A[j] < A[i]Elements for which no smaller element exist, consider next smaller element as -1.splitsign('nearest', 0.417),('index', 0.3365),('array', 0.3315),('smaller', 0.3309),('element', 0.2915),
Given an array of integers A .A represents a histogram i.e A[i] denotes height of the ith histogram's bar. Width of each bar is 1.Find the area of the largest rectangle formed by the histogram.splitsign('histogram', 0.5927),('rectangle', 0.4211),('largest', 0.3247),('area', 0.3198),('array', 0.2984),
Given an integer array A of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.splitsign('raining', 0.5357),('array', 0.4102),('elevation', 0.3871),('water', 0.3469),('compute', 0.346),
Given a string A consisting of lowercase characters. You have to find the number of substrings in A which starts with vowel and end with consonants or vice-versa. Return the count of substring modulo 109 + 7.splitsign('substrings', 0.5097),('substring', 0.4779),('vowel', 0.4687),('consonants', 0.4502),('string', 0.4252),
Given the array of strings A, you need to find the longest string S which is the prefix of ALL the strings in the array. Longest common prefix for a pair of strings S1 and S2 is the longest string S which is the prefix of both S1 and S2.splitsign('strings', 0.4716),('string', 0.4481),('longest', 0.3916),('array', 0.3683),('prefix', 0.3229),
The count-and-say sequence is the sequence of integers beginning as follows:  1, 11, 21, 1211, 111221, ... 1 is read off as one 1 or 11. 11 is read off as two 1s or 21. 21 is read off as one 2, then one 1 or 1211. Given an integer n, generate the nth sequence.splitsign('sequence', 0.4845),('1211', 0.4302),('integers', 0.3627),('integer', 0.3489),('111221', 0.3484),
Given an string A. The only operation allowed is to insert characters in the beginning of the string. Find how many minimum characters are needed to be inserted to make the string a palindrome string.splitsign('palindrome', 0.6208),('string', 0.4453),('inserted', 0.3118),('minimum', 0.2805),('insert', 0.2711),
Given an array of words and a length L, format the text such that each line has exactly L characters and is fully (left and right) justified. You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly L characters. Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right. For the last line of text, it should be left justified and no extra space is inserted between words. Your program should return a list of strings, where each string represents a single line.splitsign('strings', 0.4111),('words', 0.3728),('string', 0.3625),('spaces', 0.3472),('text', 0.3338),
Given a binary search tree A, where each node contains a positive integer, and an integer B, you have to find whether or not there exist two different nodes X and Y such that X.value + Y.value = B.Return 1 to denote that two such nodes exist. Return 0, otherwise.splitsign('binary', 0.4476),('tree', 0.3674),('nodes', 0.3523),('node', 0.3088),('integer', 0.3065),
Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.The first call to next() will return the smallest number in BST. Calling next() again will return the next smallest number in the BST, and so on.splitsign('smallest', 0.4563),('binary', 0.4388),('tree', 0.3428),('iterator', 0.3034),('node', 0.2946),
Given a set of reviews provided by the customers for different hotels and a string containing Good Words, you need to sort the reviews in descendingsplitsign('sort', 0.4718),('hotels', 0.3854),('descending', 0.3647),('reviews', 0.3508),('customers', 0.2611),
orderaccording to their Goodness Value (Higher goodness value first). We define the Goodness Value of a string as the number of Good Words in that string.splitsign('orderaccording', 0.6337),('string', 0.3667),('words', 0.2903),('value', 0.2482),('higher', 0.2304),
NOTE: Sorting should be stable. If review i and review j have the same Goodness Value then their original order would be preserved.You are expected to use Trie in an Interview for such problemssplitsign('sorting', 0.5135),('review', 0.447),('order', 0.3994),('trie', 0.2868),('interview', 0.1805),
Given a binary tree denoted by root node A and a leaf node B from this tree.It is known that all nodes connected to a given node (left child, right child and parent) get burned in 1 second. Then all the nodes which are connected through one intermediate get burned in 2 seconds, and so on.You need to find the minimum time required to burn the complete binary tree.splitsign('tree', 0.4315),('nodes', 0.4157),('node', 0.3736),('seconds', 0.3644),('burned', 0.3453),
Given a binary tree, find its maximum depth.The maximum depth of a binary tree is the number of nodes along the longest path from the root node down to the farthest leaf node.splitsign('tree', 0.4523),('depth', 0.4388),('nodes', 0.3541),('farthest', 0.3458),('binary', 0.3428),
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.An example is the root-to-leaf path 1->2->3 which represents the number 123.Find the total sum of all root-to-leaf numbers % 1003.splitsign('digits', 0.4229),('tree', 0.4156),('numbers', 0.4143),('sum', 0.4002),('binary', 0.3835),
Given a binary treestruct TreeLinkNode {TreeLinkNode *left;TreeLinkNode *right;TreeLinkNode *next; }Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.Initially, all next pointers are set to NULL.splitsign('treelinknode', 0.6452),('treestruct', 0.4741),('pointer', 0.4041),('pointers', 0.3758),('null', 0.3479),
Given a binary tree A of integers. Return an array of integers representing the right view of the Binary tree.Right view of a Binary Tree: is a set of nodes visible when the tree is visited from Right side.splitsign('tree', 0.4993),('binary', 0.4496),('view', 0.4264),('nodes', 0.4153),('array', 0.333),
You are given the following :A positive number NHeights : A list of heights of N persons standing in a queueInfronts : A list of numbers corresponding to each person (P) that gives the number of persons who are taller than P and standing in front of PYou need to return list of actual order of persons’s heightsplitsign('heights', 0.527),('height', 0.4836),('standing', 0.4363),('taller', 0.4223),('numbers', 0.3959),
Given two binary trees, write a function to check if they are equal or not.Two binary trees are considered equal if they are structurally identical and the nodes have the same value.Return 0 / 1 ( 0 for false, 1 for true ) for this problemsplitsign('binary', 0.4422),('equal', 0.3908),('trees', 0.3832),('nodes', 0.2858),('function', 0.2621),
Given an one-dimensional unsorted array A containing N integers.You are also given an integer B, find if there exists a pair of elements in the array whose difference is B.Return 1 if any such pair exists else return 0.splitsign('array', 0.4197),('integers', 0.382),('integer', 0.3565),('unsorted', 0.3547),('pair', 0.2541),
Given an array A of N non-negative numbers and you are also given non-negative number B.You need to find the number of subarrays in A having sum less than B. We may assume that there is no overflow.splitsign('subarrays', 0.5735),('array', 0.3785),('sum', 0.3444),('numbers', 0.2526),('overflow', 0.2432),
Given an array A of positive integers,call a (contiguous,not necessarily distinct) subarray of A good if the number of different integers in that subarray is exactly B.Return the number of good subarrays of A.splitsign('subarrays', 0.6309),('subarray', 0.613),('contiguous', 0.4594),('array', 0.4157),('distinct', 0.2974),
You are given an integer array A containing N integers.You can remove atmost one subarray from it such that the remaining elements must occur atmost two times.Find the minimum size of the subarray you need to remove such that remaining elements must occur for atmost two times.splitsign('subarray', 0.5183),('array', 0.4135),('integers', 0.3444),('integer', 0.3438),('atmost', 0.2706),
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.splitsign('triplets', 0.3993),('integers', 0.3937),('sum', 0.3243),('array', 0.3173),('zero', 0.2086),
Your task is to remove all the duplicates and return a sorted array of distinct elements consisting of all distinct elements present in A.But, instead of returning an answer array, you have to rearrange the given array in-place such that it resembles what has been described above. Hence, return a single integer, the index(1-based) till which the answer array would reside in the given array A.splitsign('array', 0.3902),('distinct', 0.3688),('duplicates', 0.3483),('rearrange', 0.2158),('elements', 0.2052),
Find the intersection of two sorted arrays. OR in other words, Given 2 sorted arrays, find all the elements which occur in both the arrays.splitsign('arrays', 0.4843),('intersection', 0.467),('sorted', 0.2406),('elements', 0.2308),('given', 0.148),
Given a sorted array, remove the duplicates in place such that each element can appear atmost twice and return the new length.Do not allocate extra space for another array, you must do this in place with constant memory.splitsign('array', 0.4016),('duplicates', 0.3374),('allocate', 0.2757),('sorted', 0.2554),('twice', 0.2081),
Given an array and a value, remove all the instances of that value in the array. Also return the number of elements left in the array after the operation.It does not matter what is left beyond the expected length.splitsign('array', 0.4888),('length', 0.3277),('remove', 0.2954),('number', 0.2551),('elements', 0.2537),
Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.splitsign('sort', 0.5147),('colors', 0.4973),('array', 0.4324),('blue', 0.4036),('colored', 0.4022),
